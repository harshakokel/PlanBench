{
    "task": "task_1_plan_generation",
    "prompt_type": "oneshot",
    "domain": "mystery_blocksworld_3",
    "instances": [
        {
            "instance_id": 2,
            "example_instance_ids": [
                1
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object b and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack a)\n(overcome a c)\n(attack b)\n(overcome b a)\n",
            "llm_raw_response": "Let's analyze your plans and see if we can achieve your goals.\n\n**Understanding the Mechanics**\n\nIt seems you're working with a system where objects interact, influenced by states like \"Harmony,\" \"Pain,\" and \"Province.\"  Actions have preconditions (facts that must be true) and effects (facts that become true or false).\n\n**Analyzing Your First Plan**\n\n* **Initial State:**\n    * b craves a\n    * c craves b\n    * Harmony\n    * Planet a\n    * Province c\n\n* **Goal:**\n    * a craves b\n    * c craves a\n\n* **Plan Breakdown:**\n\n    1. **feast object c from object b:**  This action is valid because the preconditions (c craves b, Province c, Harmony) are met.\n        * **Resulting State:** Pain c, Province b, (b craves a remains true)\n\n    2. **succumb object c:** Valid (Pain c is true)\n        * **Resulting State:** Harmony, Planet c, Province c, (b craves a remains true)\n\n    3. **feast object b from object a:**  This action is NOT valid. The precondition \"Province b\" is true, but \"b craves a\" and \"Harmony\" are required but not met. \n\n    *Your plan fails here because you cannot execute the third step.*\n\n**Analyzing Your Second Plan (Incomplete)**\n\nYou haven't provided a plan for the second scenario, but let's examine the initial state and goal:\n\n* **Initial State:**\n    * Harmony\n    * Planet a\n    * Planet b\n    * Planet c\n    * Province a\n    * Province b\n    * Province c\n\n* **Goal:**\n    * a craves c\n    * b craves a\n\n**Developing a Successful Plan (General Approach)**\n\nTo create successful plans, follow these steps:\n\n1. **Analyze the Goal:**  Determine the exact facts that need to be true.\n2. **Work Backwards:** Identify actions that can make those facts true.\n3. **Check Preconditions:** For each action, ensure its preconditions can be met by the current state or by previous actions.\n4. **Account for Side Effects:** Be mindful of how actions change the state, both positively and negatively.\n\n**Need More Information**\n\nTo help you create working plans, please",
            "extracted_llm_plan": "(feast c b)\n(succumb c)\n(feast b a)\n",
            "llm_correct": false
        },
        {
            "instance_id": 3,
            "example_instance_ids": [
                2
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b c)\n(succumb b)\n(feast c a)\n(succumb c)\n(attack b)\n(overcome b a)\n(attack c)\n(overcome c b)\n",
            "llm_raw_response": "Your plan is excellent! Here's why it works and how to complete the second scenario's plan:\n\n**Understanding the Mechanics**\n\nYou've correctly identified the cyclical nature of these actions:\n\n* **Attack:** Disrupts harmony and inflicts pain.\n* **Succumb/Overcome:**  Offer ways to restore harmony, but with specific cravings as a side effect.\n* **Feast:**  Uses cravings and harmony to shift provinces and inflict pain, restarting the cycle.\n\n**Scenario 1: Analysis**\n\nYour plan for the first scenario is perfect:\n\n1. **attack object a:**  This creates the necessary \"Pain object\" condition for the next step.\n2. **overcome object a from object c:** Object c overcomes object a's pain, resulting in object a craving object c.\n3. **attack object b:**  Same reasoning as step 1, setting up object b for manipulation.\n4. **overcome object b from object a:** Object a overcomes object b's pain, resulting in object b craving object a.\n\nYou've successfully achieved the desired cravings!\n\n**Scenario 2: Completing the Plan**\n\nHere's how to achieve \"object b craves object a and object c craves object b\" given the initial conditions:\n\n```\n[PLAN]\nfeast object b from object c \nattack object c\novercome object c from object b\n[PLAN END]\n```\n\n**Explanation:**\n\n1. **feast object b from object c:** Object b consumes its craving for object c. This shifts province object b to object c, and importantly, inflicts pain on object c.\n2. **attack object c:**  This further disrupts harmony, but more importantly, ensures object b doesn't immediately overcome object c's pain (as harmony is required for \"overcome\").\n3. **overcome object c from object b:** With object c in pain, object b can now overcome it, resulting in object c craving object b.\n\nNow, object b craves object a (initial condition), and object c craves object b, fulfilling your goal!",
            "extracted_llm_plan": "(feast b c)\n(attack c)\n(overcome c b)\n",
            "llm_correct": false
        },
        {
            "instance_id": 4,
            "example_instance_ids": [
                3
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a b)\n(succumb a)\n(feast b c)\n(overcome b a)\n",
            "llm_raw_response": "Let's analyze your plans step-by-step. \n\n**Understanding the Mechanics**\n\nIt seems like you're dealing with a system where objects interact, and these interactions change the state of \"facts\" associated with them.  Here's a breakdown:\n\n* **Objects:**  a, b, c (and potentially others)\n* **Facts:** Province, Planet, Harmony, Pain, Object Craves\n* **Actions:** Attack, Feast, Succumb, Overcome\n\n**Analyzing Your First Plan**\n\n**Initial State:**\n* object b craves object c\n* object c craves object a\n* harmony\n* planet object a \n* province object b\n\n**Goal:**\n* object b craves object a\n* object c craves object b\n\n**Plan:**\n\n1. **feast object b from object c:**  This action is VALID.\n   * **Result:** Pain object b, Province object c, (object b no longer craves object c, harmony is false)\n\n2. **succumb object b:** This action is VALID.\n   * **Result:** Province object b, Planet object b, Harmony (Pain object b is false)\n\n3. **feast object c from object a:** This action is INVALID. You need \"Province object c\" which is now false.\n\n**The plan fails at step 3.** You can't proceed because the necessary conditions for the \"Feast\" action are not met.\n\n**Analyzing Your Second Plan (Incomplete)**\n\nYou haven't provided a plan for the second scenario. Let's see if we can come up with one.\n\n**Initial State:**\n* object a craves object b\n* object b craves object c\n* harmony\n* planet object c\n* province object a\n\n**Goal:**\n* object b craves object a\n\n**Potential Plan (Needs Verification):**\n\n1. **attack object c:** This action is VALID (Province object, Planet object, Harmony are present).\n   * **Result:** Pain object c, (Province object c, Planet object c, Harmony are now false)\n\n2. **overcome object c from object b:** This action is VALID (Province object b, Pain object c are present).\n   * **Result:** Harmony, Province object c, object c craves object b (Province object b, Pain object c are now false)\n\n3. **feast object a from object b:** This",
            "extracted_llm_plan": "(feast b c)\n(succumb b)\n(feast c a)\n(attack c)\n(overcome c b)\n(feast a b)\n",
            "llm_correct": false
        },
        {
            "instance_id": 5,
            "example_instance_ids": [
                4
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a b)\n(succumb a)\n(feast b c)\n(succumb b)\n(attack c)\n(overcome c a)\n(attack b)\n(overcome b c)\n",
            "llm_raw_response": "It seems like you're working with a fascinating set of rules and actions! Let's break down your plan and see if we can achieve your goals.\n\n**Understanding the Mechanics**\n\nIt's helpful to visualize the relationships between actions and facts:\n\n* **Attack:** Requires Province, Planet, Harmony. Creates Pain, removes Province, Planet, Harmony.\n* **Succumb:** Requires Pain. Creates Province, Planet, Harmony, removes Pain.\n* **Overcome:** Requires Province (other object) and Pain. Creates Harmony, Province (self), Object Craves (other object), removes Province (other object), Pain.\n* **Feast:** Requires Object Craves (other object), Province (self), Harmony. Creates Pain, Province (other object), removes Object Craves (other object), Province (self), Harmony.\n\n**Analyzing Your First Plan**\n\n**Goal:** Object b craves object a\n\n**Initial State:**\n* Object a craves object b\n* Object b craves object c\n* Harmony\n* Planet object c\n* Province object a\n\nLet's walk through your plan step-by-step:\n\n1. **Feast object a from object b:**\n   * **Conditions Met:** Yes (Object a craves object b, Province object a, Harmony)\n   * **Resulting State:**\n      * Pain object a\n      * Province object b\n      * Object b craves object c \n\n2. **Succumb object a:**\n   * **Conditions Met:** Yes (Pain object a)\n   * **Resulting State:**\n      * Province object a\n      * Planet object a \n      * Harmony\n      * Province object b\n      * Object b craves object c\n\n3. **Feast object b from object c:**\n   * **Conditions Met:** Yes (Object b craves object c, Province object b, Harmony)\n   * **Resulting State:**\n      * Province object a\n      * Planet object a\n      * Pain object b\n      * Province object c\n\n4. **Overcome object b from object a:**\n   * **Conditions Met:** Yes (Province object c, Pain object b)\n   * **Resulting State:**\n      * Province object a\n      * Planet object a\n      * Harmony\n      * Province object b\n      * Object b craves object a  <-- **Goal Achieved!**\n\n**Your first plan successfully achieves the goal",
            "extracted_llm_plan": "(feast a b)\n(succumb a)\n(feast b c)\n(overcome b a)\n",
            "llm_correct": false
        },
        {
            "instance_id": 6,
            "example_instance_ids": [
                5
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a c)\n(succumb a)\n(feast c b)\n(overcome c a)\n(attack b)\n(overcome b c)\n",
            "llm_raw_response": "feast object a from object c\nsuccumb object a\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]",
            "extracted_llm_plan": "(feast a c)\n(succumb a)\n(attack b)\n(overcome b a)\n(attack c)\n(overcome c b)\n",
            "llm_correct": false
        },
        {
            "instance_id": 7,
            "example_instance_ids": [
                6
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a c)\n(succumb a)\n(attack b)\n(overcome b c)\n(attack a)\n(overcome a b)\n"
        },
        {
            "instance_id": 8,
            "example_instance_ids": [
                7
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack a)\n(overcome a c)\n"
        },
        {
            "instance_id": 9,
            "example_instance_ids": [
                8
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a c)\n(succumb a)\n(attack c)\n(overcome c a)\n"
        },
        {
            "instance_id": 10,
            "example_instance_ids": [
                9
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b c)\n(succumb b)\n(attack c)\n(overcome c b)\n(attack a)\n(overcome a c)\n"
        },
        {
            "instance_id": 11,
            "example_instance_ids": [
                10
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c a)\n(succumb c)\n(feast a b)\n(succumb a)\n(attack b)\n(overcome b a)\n(attack c)\n(overcome c b)\n"
        },
        {
            "instance_id": 12,
            "example_instance_ids": [
                11
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b a)\n(succumb b)\n(attack a)\n(overcome a b)\n(attack c)\n(overcome c a)\n"
        },
        {
            "instance_id": 13,
            "example_instance_ids": [
                12
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b a)\n(succumb b)\n(attack c)\n(overcome c a)\n(attack b)\n(overcome b c)\n"
        },
        {
            "instance_id": 14,
            "example_instance_ids": [
                13
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a c)\n(succumb a)\n(attack c)\n(overcome c b)\n(attack a)\n(overcome a c)\n"
        },
        {
            "instance_id": 15,
            "example_instance_ids": [
                14
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c b)\n(succumb c)\n(attack a)\n(overcome a b)\n"
        },
        {
            "instance_id": 16,
            "example_instance_ids": [
                15
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b c)\n(succumb b)\n(feast c a)\n(succumb c)\n(attack a)\n(overcome a c)\n(attack b)\n(overcome b a)\n"
        },
        {
            "instance_id": 17,
            "example_instance_ids": [
                16
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object b and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack a)\n(overcome a b)\n(attack c)\n(overcome c a)\n"
        },
        {
            "instance_id": 18,
            "example_instance_ids": [
                17
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object b and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object c and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c b)\n(succumb c)\n(feast b a)\n(succumb b)\n(attack c)\n(overcome c b)\n(attack a)\n(overcome a c)\n"
        },
        {
            "instance_id": 19,
            "example_instance_ids": [
                18
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object c and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a b)\n(overcome a c)\n(attack b)\n(overcome b a)\n"
        },
        {
            "instance_id": 20,
            "example_instance_ids": [
                19
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack b)\n(overcome b a)\n"
        },
        {
            "instance_id": 21,
            "example_instance_ids": [
                20
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c b)\n(succumb c)\n(attack a)\n(overcome a c)\n(attack b)\n(overcome b a)\n"
        },
        {
            "instance_id": 22,
            "example_instance_ids": [
                21
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a c)\n(succumb a)\n(feast c b)\n(succumb c)\n(attack b)\n(overcome b c)\n"
        },
        {
            "instance_id": 23,
            "example_instance_ids": [
                22
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\nsuccumb object c\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c a)\n(succumb c)\n(feast a b)\n(succumb a)\n(attack c)\n(overcome c b)\n"
        },
        {
            "instance_id": 24,
            "example_instance_ids": [
                23
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack b)\n(overcome b c)\n(attack a)\n(overcome a b)\n"
        },
        {
            "instance_id": 25,
            "example_instance_ids": [
                24
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c b)\n(succumb c)\n(attack b)\n(overcome b a)\n(attack c)\n(overcome c b)\n"
        },
        {
            "instance_id": 26,
            "example_instance_ids": [
                25
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b a)\n(succumb b)\n(feast a c)\n(succumb a)\n(attack c)\n(overcome c b)\n"
        },
        {
            "instance_id": 27,
            "example_instance_ids": [
                26
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object c and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b c)\n(succumb b)\n(feast c a)\n(overcome c b)\n(attack a)\n(overcome a c)\n"
        },
        {
            "instance_id": 28,
            "example_instance_ids": [
                27
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object c and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c a)\n(succumb c)\n(feast a b)\n(succumb a)\n(attack b)\n(overcome b c)\n(attack a)\n(overcome a b)\n"
        },
        {
            "instance_id": 29,
            "example_instance_ids": [
                28
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b a)\n(succumb b)\n(attack a)\n(overcome a c)\n(attack b)\n(overcome b a)\n"
        },
        {
            "instance_id": 30,
            "example_instance_ids": [
                29
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c a)\n(succumb c)\n(attack a)\n(overcome a c)\n"
        },
        {
            "instance_id": 31,
            "example_instance_ids": [
                30
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b c)\n(succumb b)\n(attack c)\n(overcome c b)\n"
        },
        {
            "instance_id": 32,
            "example_instance_ids": [
                31
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b c)\n(overcome b a)\n(attack c)\n(overcome c b)\n"
        },
        {
            "instance_id": 33,
            "example_instance_ids": [
                32
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack c)\n(overcome c a)\n"
        },
        {
            "instance_id": 34,
            "example_instance_ids": [
                33
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nattack object c\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c b)\n(succumb c)\n(attack b)\n(overcome b c)\n"
        },
        {
            "instance_id": 35,
            "example_instance_ids": [
                34
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c b)\n(succumb c)\n(feast b a)\n(succumb b)\n(attack a)\n(overcome a c)\n(attack b)\n(overcome b a)\n"
        },
        {
            "instance_id": 36,
            "example_instance_ids": [
                35
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c a)\n(overcome c b)\n"
        },
        {
            "instance_id": 37,
            "example_instance_ids": [
                36
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\novercome object c from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c a)\n(succumb c)\n(attack b)\n(overcome b a)\n(attack c)\n(overcome c b)\n"
        },
        {
            "instance_id": 38,
            "example_instance_ids": [
                37
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c a)\n(succumb c)\n(feast a b)\n(succumb a)\n(attack b)\n(overcome b a)\n"
        },
        {
            "instance_id": 39,
            "example_instance_ids": [
                38
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b c)\n(succumb b)\n(feast c a)\n(succumb c)\n(attack a)\n(overcome a b)\n(attack c)\n(overcome c a)\n"
        },
        {
            "instance_id": 40,
            "example_instance_ids": [
                39
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object a craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a c)\n(succumb a)\n(feast c b)\n(succumb c)\n(attack a)\n(overcome a b)\n"
        },
        {
            "instance_id": 41,
            "example_instance_ids": [
                40
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object a craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\nsuccumb object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack c)\n(overcome c b)\n"
        },
        {
            "instance_id": 42,
            "example_instance_ids": [
                41
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nattack object c\novercome object c from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a b)\n(succumb a)\n(attack c)\n(overcome c b)\n"
        },
        {
            "instance_id": 43,
            "example_instance_ids": [
                42
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object a craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a b)\n(succumb a)\n(feast b c)\n(succumb b)\n(attack a)\n(overcome a c)\n"
        },
        {
            "instance_id": 44,
            "example_instance_ids": [
                43
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object a craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\nsuccumb object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c a)\n(succumb c)\n(attack b)\n(overcome b c)\n(attack a)\n(overcome a b)\n"
        },
        {
            "instance_id": 45,
            "example_instance_ids": [
                44
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack a)\n(overcome a c)\n"
        },
        {
            "instance_id": 46,
            "example_instance_ids": [
                45
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b a)\n(overcome b c)\n(attack a)\n(overcome a b)\n"
        },
        {
            "instance_id": 47,
            "example_instance_ids": [
                46
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\novercome object b from object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a c)\n(overcome a b)\n"
        },
        {
            "instance_id": 48,
            "example_instance_ids": [
                47
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack a)\n(overcome a b)\n"
        },
        {
            "instance_id": 49,
            "example_instance_ids": [
                48
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b c)\n(succumb b)\n(attack a)\n(overcome a c)\n(attack b)\n(overcome b a)\n"
        },
        {
            "instance_id": 50,
            "example_instance_ids": [
                49
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a c)\n(succumb a)\n(feast c b)\n(succumb c)\n(attack b)\n(overcome b a)\n"
        },
        {
            "instance_id": 51,
            "example_instance_ids": [
                50
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\nsuccumb object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c a)\n(succumb c)\n(feast a b)\n(overcome a c)\n(attack b)\n(overcome b a)\n"
        },
        {
            "instance_id": 52,
            "example_instance_ids": [
                51
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c a)\n(succumb c)\n(attack a)\n(overcome a b)\n"
        },
        {
            "instance_id": 53,
            "example_instance_ids": [
                52
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b a)\n(succumb b)\n(attack a)\n(overcome a b)\n"
        },
        {
            "instance_id": 54,
            "example_instance_ids": [
                53
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b a)\n(succumb b)\n(feast a c)\n(overcome a b)\n(attack c)\n(overcome c a)\n"
        },
        {
            "instance_id": 55,
            "example_instance_ids": [
                54
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a c)\n(succumb a)\n(attack c)\n(overcome c b)\n"
        },
        {
            "instance_id": 56,
            "example_instance_ids": [
                55
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b a)\n(succumb b)\n(feast a c)\n(overcome a b)\n"
        },
        {
            "instance_id": 57,
            "example_instance_ids": [
                56
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b a)\n(succumb b)\n(feast a c)\n(succumb a)\n(attack b)\n(overcome b c)\n(attack a)\n(overcome a b)\n"
        },
        {
            "instance_id": 58,
            "example_instance_ids": [
                57
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\nsuccumb object a\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b a)\n(succumb b)\n(attack c)\n(overcome c a)\n"
        },
        {
            "instance_id": 59,
            "example_instance_ids": [
                58
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b a)\n(succumb b)\n(feast a c)\n(succumb a)\n(attack c)\n(overcome c a)\n"
        },
        {
            "instance_id": 60,
            "example_instance_ids": [
                59
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a c)\n(overcome a b)\n(attack c)\n(overcome c a)\n"
        },
        {
            "instance_id": 61,
            "example_instance_ids": [
                60
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b c)\n(succumb b)\n(attack a)\n(overcome a b)\n(attack c)\n(overcome c a)\n"
        },
        {
            "instance_id": 62,
            "example_instance_ids": [
                61
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object a\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a b)\n(succumb a)\n(attack b)\n(overcome b c)\n(attack a)\n(overcome a b)\n"
        },
        {
            "instance_id": 63,
            "example_instance_ids": [
                62
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object c and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b a)\n(succumb b)\n(attack c)\n(overcome c b)\n(attack a)\n(overcome a c)\n"
        },
        {
            "instance_id": 64,
            "example_instance_ids": [
                63
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object c and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a c)\n(succumb a)\n(attack c)\n(overcome c a)\n(attack b)\n(overcome b c)\n"
        },
        {
            "instance_id": 65,
            "example_instance_ids": [
                64
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a c)\n(succumb a)\n(attack b)\n(overcome b a)\n(attack c)\n(overcome c b)\n"
        },
        {
            "instance_id": 66,
            "example_instance_ids": [
                65
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a b)\n(succumb a)\n(feast b c)\n(succumb b)\n(attack a)\n(overcome a c)\n(attack b)\n(overcome b a)\n"
        },
        {
            "instance_id": 67,
            "example_instance_ids": [
                66
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c and province object a.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\nsuccumb object b\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a c)\n(succumb a)\n(attack b)\n(overcome b c)\n"
        },
        {
            "instance_id": 68,
            "example_instance_ids": [
                67
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object c and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a b)\n(succumb a)\n(attack c)\n(overcome c b)\n(attack a)\n(overcome a c)\n"
        },
        {
            "instance_id": 69,
            "example_instance_ids": [
                68
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object c and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b c)\n(succumb b)\n(attack c)\n(overcome c a)\n(attack b)\n(overcome b c)\n"
        },
        {
            "instance_id": 70,
            "example_instance_ids": [
                69
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a b)\n(succumb a)\n(attack b)\n(overcome b c)\n"
        },
        {
            "instance_id": 71,
            "example_instance_ids": [
                70
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c a)\n(succumb c)\n(attack b)\n(overcome b a)\n"
        },
        {
            "instance_id": 72,
            "example_instance_ids": [
                71
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b c)\n(succumb b)\n(feast c a)\n(succumb c)\n(attack a)\n(overcome a b)\n"
        },
        {
            "instance_id": 73,
            "example_instance_ids": [
                72
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack b)\n(overcome b c)\n"
        },
        {
            "instance_id": 74,
            "example_instance_ids": [
                73
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a c)\n(succumb a)\n(feast c b)\n(overcome c a)\n"
        },
        {
            "instance_id": 75,
            "example_instance_ids": [
                74
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a b)\n(succumb a)\n(attack b)\n(overcome b a)\n(attack c)\n(overcome c b)\n"
        },
        {
            "instance_id": 76,
            "example_instance_ids": [
                75
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b a)\n(succumb b)\n(feast a c)\n(succumb a)\n(attack b)\n(overcome b c)\n"
        },
        {
            "instance_id": 77,
            "example_instance_ids": [
                76
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object a, harmony, planet object c and province object b.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object c\nsuccumb object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack b)\n(overcome b c)\n"
        },
        {
            "instance_id": 78,
            "example_instance_ids": [
                77
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c a)\n(succumb c)\n(feast a b)\n(succumb a)\n(attack b)\n(overcome b c)\n"
        },
        {
            "instance_id": 79,
            "example_instance_ids": [
                78
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b c)\n(succumb b)\n(feast c a)\n(succumb c)\n(attack a)\n(overcome a c)\n"
        },
        {
            "instance_id": 80,
            "example_instance_ids": [
                79
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b a)\n(succumb b)\n(attack a)\n(overcome a c)\n"
        },
        {
            "instance_id": 81,
            "example_instance_ids": [
                80
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object a craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c a)\n(succumb c)\n(attack a)\n(overcome a c)\n(attack b)\n(overcome b a)\n"
        },
        {
            "instance_id": 82,
            "example_instance_ids": [
                81
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c a)\n(succumb c)\n(feast a b)\n(succumb a)\n(attack c)\n(overcome c a)\n(attack b)\n(overcome b c)\n"
        },
        {
            "instance_id": 83,
            "example_instance_ids": [
                82
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack b)\n(overcome b a)\n"
        },
        {
            "instance_id": 84,
            "example_instance_ids": [
                83
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object c and object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a b)\n(succumb a)\n(attack b)\n(overcome b a)\n"
        },
        {
            "instance_id": 85,
            "example_instance_ids": [
                84
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c a)\n(succumb c)\n(feast a b)\n(overcome a c)\n"
        },
        {
            "instance_id": 86,
            "example_instance_ids": [
                85
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\novercome object a from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack c)\n(overcome c b)\n"
        },
        {
            "instance_id": 87,
            "example_instance_ids": [
                86
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nattack object c\novercome object c from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack b)\n(overcome b a)\n(attack c)\n(overcome c b)\n"
        },
        {
            "instance_id": 88,
            "example_instance_ids": [
                87
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object a and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object a\nattack object c\novercome object c from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object b and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c b)\n(succumb c)\n(attack a)\n(overcome a b)\n(attack c)\n(overcome c a)\n"
        },
        {
            "instance_id": 89,
            "example_instance_ids": [
                88
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object a craves object b and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object a\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack b)\n(overcome b a)\n"
        },
        {
            "instance_id": 90,
            "example_instance_ids": [
                89
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack c)\n(overcome c a)\n(attack b)\n(overcome b c)\n"
        },
        {
            "instance_id": 91,
            "example_instance_ids": [
                90
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b c)\n(succumb b)\n(attack c)\n(overcome c a)\n"
        },
        {
            "instance_id": 92,
            "example_instance_ids": [
                91
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b c)\n(overcome b a)\n"
        },
        {
            "instance_id": 93,
            "example_instance_ids": [
                92
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\novercome object b from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack c)\n(overcome c a)\n"
        },
        {
            "instance_id": 94,
            "example_instance_ids": [
                93
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object c.\nMy goal is to have that object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nattack object c\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a b)\n(succumb a)\n(attack c)\n(overcome c a)\n(attack b)\n(overcome b c)\n"
        },
        {
            "instance_id": 95,
            "example_instance_ids": [
                94
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast a c)\n(succumb a)\n(feast c b)\n(succumb c)\n(attack b)\n(overcome b c)\n(attack a)\n(overcome a b)\n"
        },
        {
            "instance_id": 96,
            "example_instance_ids": [
                95
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, harmony, planet object b and province object a.\nMy goal is to have that object a craves object b and object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\nsuccumb object c\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b a)\n(overcome b c)\n"
        },
        {
            "instance_id": 97,
            "example_instance_ids": [
                96
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object b craves object c.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c b)\n(succumb c)\n(feast b a)\n(succumb b)\n(attack c)\n(overcome c a)\n"
        },
        {
            "instance_id": 98,
            "example_instance_ids": [
                97
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object c\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c b)\n(succumb c)\n(feast b a)\n(succumb b)\n(attack a)\n(overcome a b)\n"
        },
        {
            "instance_id": 99,
            "example_instance_ids": [
                98
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast c a)\n(succumb c)\n(feast a b)\n(succumb a)\n(attack c)\n(overcome c b)\n(attack a)\n(overcome a c)\n"
        },
        {
            "instance_id": 100,
            "example_instance_ids": [
                99
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b and province object c.\nMy goal is to have that object a craves object c and object c craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(attack b)\n(overcome b c)\n"
        },
        {
            "instance_id": 101,
            "example_instance_ids": [
                100
            ],
            "query": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, province object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a and province object b.\nMy goal is to have that object b craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(feast b c)\n(succumb b)\n(feast c a)\n(succumb c)\n(attack b)\n(overcome b a)\n"
        }
    ],
    "engine": "gemini-1.5-pro"
}